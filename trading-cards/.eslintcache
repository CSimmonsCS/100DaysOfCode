[{"/Users/cdot/Desktop/100DaysOfCode/trading-cards/src/index.js":"1","/Users/cdot/Desktop/100DaysOfCode/trading-cards/src/App.js":"2","/Users/cdot/Desktop/100DaysOfCode/trading-cards/src/reportWebVitals.js":"3","/Users/cdot/Desktop/100DaysOfCode/trading-cards/src/components/Header/index.js":"4","/Users/cdot/Desktop/100DaysOfCode/trading-cards/src/components/SearchLayout/index.js":"5","/Users/cdot/Desktop/100DaysOfCode/trading-cards/src/tcgplayer.js":"6","/Users/cdot/Desktop/100DaysOfCode/trading-cards/src/components/Search/index.js":"7"},{"size":500,"mtime":1609277105594,"results":"8","hashOfConfig":"9"},{"size":281,"mtime":1609361567423,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1609277105595,"results":"11","hashOfConfig":"9"},{"size":670,"mtime":1610266135690,"results":"12","hashOfConfig":"9"},{"size":4434,"mtime":1610317986883,"results":"13","hashOfConfig":"9"},{"size":6269,"mtime":1610236942882,"results":"14","hashOfConfig":"9"},{"size":533,"mtime":1610241748539,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1h913gr",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"18"},"/Users/cdot/Desktop/100DaysOfCode/trading-cards/src/index.js",[],["35","36"],"/Users/cdot/Desktop/100DaysOfCode/trading-cards/src/App.js",["37"],"import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header';\nimport SearchLayout from './components/SearchLayout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <SearchLayout />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/cdot/Desktop/100DaysOfCode/trading-cards/src/reportWebVitals.js",[],"/Users/cdot/Desktop/100DaysOfCode/trading-cards/src/components/Header/index.js",["38","39","40","41","42"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction Header() {\n  return(\n    <div className=\"Header\">\n      <header>\n        <nav>\n          <div className=\"logo\">\n            <a href=\"/\">\n              <h2>CardValue</h2>\n            </a>\n          </div>\n          <ul>\n            <li>\n              <a href=\"#\">Pokemon</a>\n            </li>\n            <li>\n              <a href=\"#\">YuGiOh</a>\n            </li>\n            <li>\n              <a href=\"#\">Sign In</a>\n            </li>\n            <li>\n              <a href=\"#\">Sign Up</a>\n            </li>\n          </ul>\n        </nav>\n      </header>\n    </div>\n  );\n}\n\nexport default Header;\n","/Users/cdot/Desktop/100DaysOfCode/trading-cards/src/components/SearchLayout/index.js",["43","44"],"/Users/cdot/Desktop/100DaysOfCode/trading-cards/src/tcgplayer.js",["45","46","47","48"],"const axios = require('axios');\n\nconst PUBLIC_KEY = 'e461db10-9b1d-48f4-b689-e6bd4e1be9dd';\nconst PRIVATE_KEY = 'edfa43ea-dff7-4788-8a2b-285afa3e172f';\n\nconst PROXY_URL = 'https://cors-anywhere.herokuapp.com/';\n\nlet headers = {\n  // 'User-Agent': 'CardValue',\n  'Content-Type': 'application/x-www-form-urlencoded',\n  'Access-Control-Allow-Origin': '*',\n  'Access-Control-Allow-Credentials': 'true',\n  'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n  'Access-Control-Allow-Methods': 'POST'\n  // 'Content-Type': 'application/json',\n  // 'Content-Type': 'multipart/form-data',\n};\n\nlet dataString =\n  'grant_type=client_credentials' +\n  '&client_id=' + PUBLIC_KEY +\n  '&client_secret=' + PRIVATE_KEY;\n\nexport let getBearerToken = async () => {\n  console.log('calling to api');\n  const response = await axios(\n    {\n      url: PROXY_URL + 'https://api.tcgplayer.com/token',\n      method: 'POST',\n      headers: headers,\n      data: dataString,\n    })\n  .catch(function (error){\n    console.log(error.response);\n    console.log('error');\n  });\n\n  const bearer = response.data.access_token;\n  headers['Authorization'] = 'bearer ' + bearer;\n  console.log('bearer token success');\n  // console.log(headers);\n  // console.log(bearer);\n\n  return bearer;\n}\n\n\n\nexport let getAllCategories = async () => {\n  console.log('calling to api to get all categories');\n  const response = await axios({\n    url: 'https://api.tcgplayer.com/catalog/categories' + '?limit=16' + '&sortOrder=name',\n    method: 'GET',\n    headers: headers,\n  })\n  .catch((error) => {\n    console.log(error.response);\n  });\n\n  // console.log(response.data);\n  console.log('all categories call success');\n  //all categories\n  const all_categories = response.data;\n\n  return all_categories;\n\n}\n\nexport let getPokemonCategoryId = (all_categories) => {\n  console.log('getting pokemon categoryId');\n  let pokemon_category_object = all_categories.results.find( x => x.name === 'Pokemon');\n  console.log(pokemon_category_object);\n  let pokemonCategoryId = pokemon_category_object['categoryId'];\n  console.log(pokemonCategoryId);\n  console.log('pokemon categoryId success');\n\n  return pokemonCategoryId;\n}\n\nexport let getPokemonMedia = async (pokemonId) => {\n  console.log('calling to api to get all pokemon category media')\n  const response = await axios({\n    url: 'https://api.tcgplayer.com/catalog/categories/' + pokemonId + '/media',\n    method: 'GET',\n    headers: headers,\n  }).catch((error) => {\n    console.log(error.response);\n  });\n\n  const all_pokemon_media = response.data;\n\n  console.log(all_pokemon_media);\n  console.log('all pokemon category media success');\n\n  return all_pokemon_media;\n}\n\nexport let getPokemonProducts = async (pokemonId, search_term) => {\n  console.log('calling to api to get pokemon products');\n  const response = await axios({\n    url: 'https://api.tcgplayer.com/catalog/categories/' + pokemonId + '/search',\n    method: 'POST',\n    headers:\n    {\n      \"Authorization\": headers['Authorization'],\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"text/json\"\n    },\n    // body: {\n    //   sort: \"\",\n    //   limit: 0,\n    //   offset: 0,\n    //   filters: [{name: 'ProductName', values: ['Pokemon',]}],\n    // },\n    data: \"{\\\"filters\\\":[{\\\"values\\\":[\\\"\" + search_term + \"\\\"],\\\"name\\\":\\\"ProductName\\\"}],\\\"limit\\\":72,\\\"includeAggregates\\\":true,\\\"offset\\\":0,\\\"sort\\\":\\\"MinPrice DESC\\\"}\",\n  }).catch((error) => {\n    console.log(error.response);\n  });\n  console.log(response);\n  const all_pokemon_products = response.data;\n\n  console.log(all_pokemon_products);\n  console.log('all pokemon products success');\n\n  return all_pokemon_products.results;\n}\n\nexport let getAllProductsById = async (arrayOfProductIds) => {\n  let all_product_details = [];\n\n  console.log('calling to api to get Product Details (72)');\n  for(var i = 0; i < arrayOfProductIds.length; i++){\n    all_product_details.push(await getOneProductById(arrayOfProductIds[i]));\n  }\n  // arrayOfProductIds.forEach( x => all_product_details.push(getOneProductById(x)));\n  console.log(all_product_details);\n\n  return all_product_details;\n\n}\n\nexport let getOneProductById = async (productId) => {\n  console.log('calling to api to get ' + productId + ' details');\n  const response = await axios({\n    url: 'https://api.tcgplayer.com/catalog/products/' + productId,\n    method: 'GET',\n    headers: headers,\n  }).catch((error) => {\n    console.log(error.response);\n  });\n\n  const relevant_product_market_prices = await getProductMarketPrices(productId);\n\n  let product_details = response.data.results;\n  product_details['relevant_product_market_prices'] = relevant_product_market_prices;\n  // console.log(response.data.results);\n  console.log(productId + ' success');\n  console.log(product_details);\n\n  return product_details;\n\n}\n\nlet getProductMarketPrices = async (productId) => {\n  console.log('calling to api to get ' + productId + ' market price');\n\n  const response = await axios({\n    url: 'https://api.tcgplayer.com/pricing/product/' + productId,\n    method: 'GET',\n    headers: headers,\n  }).catch((error) => {\n    console.log(error.response);\n  });\n\n  let all_prints_market_prices = response.data.results;\n\n  // console.log(all_prints_market_prices);\n\n  let filtered_market_prices = all_prints_market_prices.find( printing => printing.marketPrice);\n\n  //if we cannot find marketPrice property, check for midPrice\n  //if there is no midPrice property, return {}\n  if(!filtered_market_prices){\n    filtered_market_prices = all_prints_market_prices.find( printing => printing.midPrice);\n  }\n\n  // console.log(filtered_market_prices);\n\n  return filtered_market_prices;\n}\n\n\nlet printThis = async (print) => {\n  console.log(print);\n}\n\nconst AllCalls = async () => {\n  console.log('calling both functions');\n  await getBearerToken();\n  const categories = await getAllCategories();\n  let pokemonCategoryId = await getPokemonCategoryId(categories);\n  let all_pokemon_products = await getPokemonProducts(pokemonCategoryId);\n  let all_product_details = await getAllProductsById(all_pokemon_products);\n\n  return all_product_details;\n}\n\n// AllCalls().then( (res) =>\n  // {\n    // console.log(res);\n  // }\n// )\n// console.log(headers['bearer']);\n\n// export default { headers, dataString, PUBLIC_KEY, PRIVATE_KEY};\n","/Users/cdot/Desktop/100DaysOfCode/trading-cards/src/components/Search/index.js",["49","50"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { getPokemonProducts } from \"../../tcgplayer.js\";\nimport TextField from '@material-ui/core/TextField';\n\nvar Search = (props) => {\n  return (\n    <div className=\"Search\">\n      <TextField className=\"search-text-field\" name=\"search_term\" id=\"search\" value={props.searchTerm} onChange={props.onChange} label=\"Search\" />\n      <button className=\"search-submit-button\" type=\"submit\" onClick={props.handleSearch} >Search</button>\n    </div>\n  )\n}\n\nexport default Search;\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":12},{"ruleId":"55","severity":1,"message":"59","line":2,"column":8,"nodeType":"57","messageId":"58","endLine":2,"endColumn":16},{"ruleId":"60","severity":1,"message":"61","line":16,"column":15,"nodeType":"62","endLine":16,"endColumn":27},{"ruleId":"60","severity":1,"message":"61","line":19,"column":15,"nodeType":"62","endLine":19,"endColumn":27},{"ruleId":"60","severity":1,"message":"61","line":22,"column":15,"nodeType":"62","endLine":22,"endColumn":27},{"ruleId":"60","severity":1,"message":"61","line":25,"column":15,"nodeType":"62","endLine":25,"endColumn":27},{"ruleId":"55","severity":1,"message":"63","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":26},{"ruleId":"55","severity":1,"message":"59","line":2,"column":8,"nodeType":"57","messageId":"58","endLine":2,"endColumn":16},{"ruleId":"64","severity":1,"message":"65","line":52,"column":57,"nodeType":"66","messageId":"67","endLine":52,"endColumn":58},{"ruleId":"64","severity":1,"message":"65","line":52,"column":71,"nodeType":"66","messageId":"67","endLine":52,"endColumn":72},{"ruleId":"55","severity":1,"message":"68","line":193,"column":5,"nodeType":"57","messageId":"58","endLine":193,"endColumn":14},{"ruleId":"55","severity":1,"message":"69","line":197,"column":7,"nodeType":"57","messageId":"58","endLine":197,"endColumn":15},{"ruleId":"55","severity":1,"message":"59","line":2,"column":8,"nodeType":"57","messageId":"58","endLine":2,"endColumn":16},{"ruleId":"55","severity":1,"message":"70","line":3,"column":10,"nodeType":"57","messageId":"58","endLine":3,"endColumn":28},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Component' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'printThis' is assigned a value but never used.","'AllCalls' is assigned a value but never used.","'getPokemonProducts' is defined but never used.","no-global-assign","no-unsafe-negation"]